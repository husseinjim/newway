
import streamlit as st
import requests
import os
import random

st.set_page_config(page_title="ุฏุฑุฏุดุฉ ูุน ุงูุญุฌูุฉ ุงูุนุฑุงููุฉ", layout="centered")

st.title("๐ฎ๐ถ ุฏุฑุฏุดุฉ ูุน ุงูุญุฌูุฉ ุงูุนุฑุงููุฉ")

menu = st.sidebar.radio("ุงุฎุชุงุฑ ุงููุณู:", ["๐ฌ ุฏุฑุฏุดุฉ", "๐ฝ๏ธ ูุตูุงุช", "๐ฎ ุญุธู ุงูููู", "๐โโ๏ธ ุงุณุฃูู ุงูุญุฌูุฉ"])

# ------------------------
# 1. Chat Section
# ------------------------
if menu == "๐ฌ ุฏุฑุฏุดุฉ":
    st.markdown("**ููููุ ุงูุชุจู ุณุคุงูู ููุง ูุงูุญุฌูุฉ ุชุฑุฏ ุนููู:**")
    user_input = st.text_input("โ๏ธ ุณุคุงูู:")
    if st.button("ุฃุฑุณู ๐"):
        if user_input.strip() != "":
            with st.spinner("ุงูุญุฌูุฉ ูุงุนุฏุฉ ุชููุฑ..."):
                api_key = os.getenv("OPENROUTER_API_KEY")
                headers = {
                    "Authorization": f"Bearer {api_key}",
                    "Content-Type": "application/json"
                }
                payload = {
                    "model": "deepseek/deepseek-r1:free",
                    "messages": [{"role": "user", "content": user_input}]
                }
                try:
                    response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=payload)
                    data = response.json()
                    if "choices" in data:
                        ai_reply = data["choices"][0]["message"]["content"]
                        st.success(ai_reply)
                    else:
                        st.error("โ ูุง ูุฏุฑุช ุฃุฌุงูุจุ ุฌุฑูุจู ูุฑุฉ ุซุงููุฉ.")
                except Exception as e:
                    st.error(f"โ ุตุงุฑ ุฎุทุฃ: {e}")

# ------------------------
# 2. Recipes Section
# ------------------------
elif menu == "๐ฝ๏ธ ูุตูุงุช":
    st.markdown("**ุงุฎุชุงุฑู ุฃููุฉ ุนุฑุงููุฉ ูุชุนููู ุทุฑููุฉ ุชุญุถูุฑูุง:**")
    recipes = {
        "ุฏูููุฉ": "ุงูููููุงุช: ูุฑู ุนูุจุ ุฑุฒุ ูุญู ููุฑููุ ุจูุงุฑุงุช...
ุงูุฎุทูุงุช: ...",
        "ุชุดุฑูุจ ูุญู": "ุงูููููุงุช: ูุญูุ ุฎุจุฒ ุนุฑุงููุ ุจุตูุ ุทูุงุทู...
ุงูุฎุทูุงุช: ...",
        "ุจุฑูุงูู": "ุงูููููุงุช: ุฑุฒุ ุฏุฌุงุฌุ ุจูุงุฑุงุช ุจุฑูุงููุ ุจุทุงุทุง...
ุงูุฎุทูุงุช: ...",
        "ูุจุฉ ุญูุจ": "ุงูููููุงุช: ุจุฑุบูุ ูุญูุ ุจุตู...
ุงูุฎุทูุงุช: ...",
        "ุจุงููุฉ": "ุงูููููุงุช: ุจุงููุฉุ ูุญูุ ุทูุงุทู...
ุงูุฎุทูุงุช: ...",
        "ููุฒู": "ุงูููููุงุช: ุฑุฒุ ูุญู ุบููุ ุจูุงุฑุงุช...
ุงูุฎุทูุงุช: ...",
        "ููููุจุฉ": "ุงูููููุงุช: ุฑุฒุ ุจุงุฐูุฌุงูุ ุจุทุงุทุง...
ุงูุฎุทูุงุช: ...",
        "ูุฑู ุงูุณุจุงูุบ": "ุงูููููุงุช: ุณุจุงูุบุ ูุญูุ ุญูุต...
ุงูุฎุทูุงุช: ...",
        "ุชุดุฑูุจ ุฏุฌุงุฌ": "ุงูููููุงุช: ุฏุฌุงุฌุ ุฎุจุฒ ุนุฑุงููุ ุทูุงุทู...
ุงูุฎุทูุงุช: ...",
        "ูุจุฉ ููุตููุฉ": "ุงูููููุงุช: ุจุฑุบูุ ูุญูุ ุชูุงุจู...
ุงูุฎุทูุงุช: ..."
    }
    selected = st.selectbox("ุงุฎุชุงุฑู ุฃููุฉ:", list(recipes.keys()))
    if st.button("ุดููู ุงููุตูุฉ ๐ด"):
        st.info(recipes[selected])

# ------------------------
# 3. Luck of the Day
# ------------------------
elif menu == "๐ฎ ุญุธู ุงูููู":
    luck = [
        "ุงูููู ุญุธุฌ ุญููุ ุงุณุชุบูู ุงููุฑุต ูููู โจ",
        "ูุงูู ูุงุตุญูุ ุจุงุฌุฑ ุฃุญุณู ุฅู ุดุงุก ุงููู ๐",
        "ูู ุฑุฒู ุจุงูุทุฑูู... ุงุณุชุนุฏู ูู ๐",
        "ุงูุญุธ ูุชูุณุท ุงููููุ ุจุณ ุงูุชู ูุฏูุง ๐ช",
        "ุฑุงุญ ุชุณูุนูู ุฎุจุฑ ููุฑุญุฌ ๐"
    ]
    if st.button("ุงุญุณุจููู ุญุธู ุงูููู โจ"):
        st.success(random.choice(luck))

# ------------------------
# 4. Yes/No Oracle
# ------------------------
elif menu == "๐โโ๏ธ ุงุณุฃูู ุงูุญุฌูุฉ":
    st.markdown("**ุงูุชุจู ุณุคุงู ูููู ุฌูุงุจู ูุนู ุฃู ูุง:**")
    yn_question = st.text_input("๐ ุณุคุงูู:")
    if st.button("ุงุณุฃูู ๐งฟ"):
        answer = random.choice(["ุงู ูุงููู", "ูุง ุญุจูุจุฉ ุงูุญุฌูุฉ", "ูุจูู ุนููู ูุนู", "ูู ููุชู ูุณุฉ", "ุงููู ุฃุนููุ ุจุณ ุฅู ุดุงุก ุงููู ุฎูุฑ"])
        st.markdown(f"**ุงูุญุฌูุฉ ุชููู:** {answer}")
